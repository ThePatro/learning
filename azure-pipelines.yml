# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pr:
- main

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  clean: true

- task: UseDotNet@2
  displayName: 'Use .NET 7.0.x Sdk'
  inputs:
    packageType: sdk
    version: 7.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@1

# restore packages from nuget
- task: DotNetCoreCLI@2
  displayName: Restore Packages
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

# Perform a build of the .csproj
- task: DotNetCoreCLI@2
  displayName: Build Projects
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: --configuration Release

 # Run Unit test for functions
- task: DotNetCoreCLI@2
  displayName: Run Unit Tests
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    publishTestResults: true

# Publish code coverage results
# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/TestResults/Coverage/'
    failIfCoverageEmpty: false